#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BNO055.h>
#include <utility/imumaths.h>
#include <math.h>

float pitchG=0;
float rollG=0;
float yawG=0;

float dt;
unsigned long microsOld;

#define BNO055_SAMPLERATE_DELAY_MS (1)

Adafruit_BNO055 myIMU = Adafruit_BNO055();

void setup() {
  // put your setup code here, to run once:
SerialUSB.begin(115200);
myIMU.begin();
delay(1000);
int8_t temp=myIMU.getTemp();
myIMU.setExtCrystalUse(true);
uint8_t system, gyro, accel, mag = 0;  while(gyro != 3)  {      myIMU.getCalibration(&system, &gyro, &accel, &mag);      SerialUSB.print("CALIBRATION: Sys=");      SerialUSB.print(system, DEC);      SerialUSB.print(" Gyro=");      SerialUSB.print(gyro, DEC);      SerialUSB.print(" Accel=");      SerialUSB.print(accel, DEC);      SerialUSB.print(" Mag=");      SerialUSB.println(mag, DEC);      delay(100);  }  SerialUSB.println(""); SerialUSB.println("Calibrated");
microsOld=micros();
}

void loop() {
  // put your main code here, to run repeatedly:
uint8_t system, gyro, accel, mg = 0;
myIMU.getCalibration(&system, &gyro, &accel, &mg);
imu::Vector<3> gyr =myIMU.getVector(Adafruit_BNO055::VECTOR_GYROSCOPE);

dt=(micros()-microsOld)/1000000.; //convert to seconds and FLOAT 
microsOld=micros();

pitchG=pitchG+gyr.y()*dt;
rollG=rollG+gyr.x()*dt;
yawG=yawG+gyr.z()*dt;

SerialUSB.print(rollG);
SerialUSB.print(" ");
SerialUSB.print(pitchG);
SerialUSB.print(" ");
SerialUSB.print(yawG);
SerialUSB.print(" Calib:, ");
SerialUSB.print(accel);SerialUSB.print(",");SerialUSB.print(gyro);SerialUSB.print(",");SerialUSB.print(mg);SerialUSB.print(",");SerialUSB.println(system);

 
delay(BNO055_SAMPLERATE_DELAY_MS);
}
